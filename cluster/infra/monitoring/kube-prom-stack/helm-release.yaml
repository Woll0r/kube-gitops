---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 14.9.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  timeout: 20m
  values:
    prometheusOperator:
      createCustomResource: false
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "null"
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth.testkube.cardboardbox.be/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.testkube.cardboardbox.be/oauth2/start"
        hosts:
          - "alert-manager.testkube.cardboardbox.be"
        tls:
          - hosts:
              - "alert-manager.testkube.cardboardbox.be"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              resources:
                requests:
                  storage: 1Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    grafana:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
      endpoints:
        - 192.168.42.100
    kubeScheduler:
      enabled: false
      endpoints:
        - 192.168.42.100
    kubeProxy:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    prometheus:
      ingress:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth.testkube.cardboardbox.be/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.testkube.cardboardbox.be/oauth2/start"
        hosts:
          - "prometheus.testkube.cardboardbox.be"
        tls:
          - hosts:
              - "prometheus.testkube.cardboardbox.be"
      prometheusSpec:
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 672h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              resources:
                requests:
                  storage: 5Gi
